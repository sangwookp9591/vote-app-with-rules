version: '3.8'
services:
  db:
    image: postgres:15
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mydb
    volumes:
      - db_data:/var/lib/postgresql/data # ← 이 줄 추가
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - vote-net

  redis:
    image: redis:7
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - vote-net

  app:
    build: .
    ports:
      - '3000:3000'
    # 환경변수는 .env 파일에서 일괄 관리합니다
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      chat-server:
        condition: service_started
      notification-server:
        condition: service_started
    restart: always
    networks:
      - vote-net
    # 컨테이너 시작 시 Prisma 마이그레이션을 자동으로 실행하고, 썸네일 자동화 스크립트도 함께 실행
    command: sh -c "npx prisma migrate dev && node thumbnail-capture.js & npm start"
    # 업로드 이미지를 컨테이너와 로컬에서 모두 접근 가능하게 볼륨 마운트
    volumes:
      - ./public/uploads:/app/public/uploads

  chat-server:
    build:
      context: ./server/chat-server
      dockerfile: Dockerfile
    ports:
      - '5001:5001'
    # 환경변수는 .env 파일에서 일괄 관리합니다
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    restart: always
    networks:
      - vote-net

  notification-server:
    build:
      context: ./server/notification-server
      dockerfile: Dockerfile
    ports:
      - '4000:4000'
    # 환경변수는 .env 파일에서 일괄 관리합니다
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    restart: always
    networks:
      - vote-net

  srs:
    image: ossrs/srs:5
    ports:
      - '1935:1935'
      - '1985:1985'
      - '8080:8080'
      - '8000:8000'
    volumes:
      - /Users/psw/Desktop/project/vote-app-with-rules/vote-app-with-rules/srs_hls:/usr/local/srs/objs/nginx/html/hls
      - ./srs.conf:/usr/local/srs/conf/srs.conf

volumes:
  db_data:
  uploads_data:

networks:
  vote-net:
    driver: bridge
